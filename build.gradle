/*
 * Copyright (c) 2022 Twilio Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
    mavenCentral()
    google()
  }
  dependencies {
    def nav_version = "2.5.2"
    classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.28.2"
  }
}

// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
  id 'com.android.application' version '7.1.1' apply false
  id 'com.android.library' version '7.1.1' apply false
  id 'org.jetbrains.kotlin.android' version '1.6.21' apply false
  id 'org.jlleitschuh.gradle.ktlint' version '10.2.0'
}

allprojects {
  apply plugin: "org.jlleitschuh.gradle.ktlint"
  apply from: "$rootProject.projectDir/common.gradle"
  repositories {
    mavenCentral()
    google()
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}

task artifactoryLibraryReleaseUpload(type: GradleBuild) {
  description = 'Publish Verify SNA SDK to internal artifactory'
  group = 'Publishing'
  tasks = [':verify_sna:assembleRelease', ':verify_sna:artifactoryPublish']
  startParameter.projectProperties += gradle.startParameter.projectProperties + [
      'artifactory.username': getProjectProperty("ARTIFACTORY_USER"),
      'artifactory.password':getProjectProperty("ARTIFACTORY_PASSWORD"),
      'artifactory.repository': 'releases'
  ]
}

/*
 * Check for the property in the project followed by the property in the environment
 */
String getProjectProperty(prop) {
  String value = project.hasProperty(prop) ? project.property(prop) : System.getenv(prop)
  return value != null ? value : ""
}
